{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","onChange","target","value","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","toggleEditingHandler","prevState","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ChartBar","barFillheight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaxium","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpenseDate","year","getFullYear","month","toLocaleString","day","ExpenseItem","ExpensesList","items","length","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMUY_EXPENSES","App","setExpenses","console","log","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8971ed5.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  const onCancelHandler = () => {\r\n    props.onCancel();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangeHandler} value={enteredTitle} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} value={enteredAmount} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} value={enteredDate} />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={onCancelHandler}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from 'react';\r\n\r\nimport './NewExpense.css';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const toggleEditingHandler = () => {\r\n    setIsEditing((prevState) => {\r\n      return !prevState;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && <button onClick={toggleEditingHandler}>Add New Expense</button>}\r\n      {isEditing && <ExpenseForm onCancel={toggleEditingHandler} onSaveExpenseData={saveExpenseDataHandler}></ExpenseForm>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropDownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropDownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillheight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillheight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: barFillheight }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import './Chart.css';\r\n\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaxium = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaxium} label={dataPoint.label}></ChartBar>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from './../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints}></Chart>;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const year = props.date.getFullYear();\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import './ExpenseItem.css';\r\n\r\nimport Card from './../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import './ExpensesList.css';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import { useState } from 'react';\r\n\r\nimport './Expenses.css';\r\n\r\nimport Card from './../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport ExpensesList from './ExpensesList';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(new Date().getFullYear().toString());\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}></ExpensesFilter>\r\n        <ExpensesChart expenses={filteredExpenses}></ExpensesChart>\r\n        <ExpensesList items={filteredExpenses}></ExpensesList>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from 'react';\n\nimport './App.css';\n\nimport NewExpenses from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMUY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMUY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    console.log(expense);\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpenses onAddExpense={addExpenseHandler}></NewExpenses>\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}